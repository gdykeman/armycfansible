# tasks file for myapp_infra
- name: create vpc
  ec2_vpc:
    state: present
    cidr_block: 172.22.0.0/16
    resource_tags: { "Name":"Training" }
    subnets:
      - cidr: 172.22.1.0/24
        resource_tags: { "Name":"Training" }
    internet_gateway: True
    route_tables:
      - subnets:
          - 172.22.1.0/24
        routes:
          - dest: 0.0.0.0/0
            gw: igw
    region: "{{ region }}"
    wait: yes
  register: vpc

- name: create admin access
  ec2_group:
    name: admin_access
    description: SSH access for admins and tower
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
  tags: security_groups
  register: admin_access


- name: create app security group
  ec2_group:
    name: "{{ app_name }}"
    description: "{{ app_name }} security group"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 0
        to_port: 65535
        group_name: "{{ app_name }}"
      - proto: udp
        from_port: 0
        to_port: 65535
        group_name: "{{ app_name }}"
      - proto: icmp
        from_port: 0
        to_port: 0
        group_name: "{{ app_name }}"
    vpc_id: "{{ vpc.vpc_id }}"
  tags: security_groups
  register: app_security_group

- name: create instances
  ec2:
    assign_public_ip: yes
    region: "{{ region }}"
    key_name: "{{ key_name }}"
    group_id:
    - "{{ app_security_group.group_id }}"
    - "{{ admin_access.group_id }}"
    instance_type: "{{ instance_size }}"
    vpc_subnet_id: "{{ vpc.subnets[0].id }}"
    image: "{{ ami }}"
    wait: yes
    wait_timeout: 500
    exact_count: "{{ desired_capacity }}"
    count_tag:
       app: "{{ app_name }}"
       env: training
    instance_tags:
       app: "{{ app_name }}"
       env: training
  register: result

- name: waiting for ssh to start
  wait_for:
    port: 22
    host: "{{ item.public_ip }}"
    timeout: 300
  with_items: "{{ result.tagged_instances }}"
